How did viewing a diff between two versions of a file help you see the bug that 
was introduced?

    
You can check the lines that have actually been changed without searching through all the code.


How could having easy access to the entire history of a file make you a more 
efficient programmer in the long term?

    
If you make some mistakes, you can roll back to a previous version of the code. You can also check the evolution of the projects.




What do you think are the pros and cons of manually choosing when to create a
 commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    
You can use a more rational approach to commit.




Why do you think some version control systems, like Git, allow saving multiple
 files in one commit, while others, like Google Docs, treat each file separately?

    
A project may have many files related with each other, so it's better to pack them together!



How can you use the commands git log and git diff to view the history of files?

    
"Git log" gives you a list of all the commits tha have been made. "Git diff" is used to compare two versions of the file: using this method you can easily find out the differences between them.

How might using version control make you more confident to make changes that 
could break something?

    
If I do something wrong, I can roll back to a previous, stable version.



Now that you have your workspace set up, what do you want to try using Git for?

    
Well, I'll use Git for my first Udacity Projects!
